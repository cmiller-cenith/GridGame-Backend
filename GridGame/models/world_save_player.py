# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from GridGame.models.base_model_ import Model
from GridGame.models.coord import Coord  # noqa: F401,E501
from GridGame import util


class WorldSavePlayer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, position: Coord=None, health: int=None, moves: int=None, taken_moves: List[Coord]=None):  # noqa: E501
        """WorldSavePlayer - a model defined in Swagger

        :param position: The position of this WorldSavePlayer.  # noqa: E501
        :type position: Coord
        :param health: The health of this WorldSavePlayer.  # noqa: E501
        :type health: int
        :param moves: The moves of this WorldSavePlayer.  # noqa: E501
        :type moves: int
        :param taken_moves: The taken_moves of this WorldSavePlayer.  # noqa: E501
        :type taken_moves: List[Coord]
        """
        self.swagger_types = {
            'position': Coord,
            'health': int,
            'moves': int,
            'taken_moves': List[Coord]
        }

        self.attribute_map = {
            'position': 'position',
            'health': 'health',
            'moves': 'moves',
            'taken_moves': 'taken_moves'
        }
        self._position = position
        self._health = health
        self._moves = moves
        self._taken_moves = taken_moves

    @classmethod
    def from_dict(cls, dikt) -> 'WorldSavePlayer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The WorldSave_player of this WorldSavePlayer.  # noqa: E501
        :rtype: WorldSavePlayer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def position(self) -> Coord:
        """Gets the position of this WorldSavePlayer.


        :return: The position of this WorldSavePlayer.
        :rtype: Coord
        """
        return self._position

    @position.setter
    def position(self, position: Coord):
        """Sets the position of this WorldSavePlayer.


        :param position: The position of this WorldSavePlayer.
        :type position: Coord
        """

        self._position = position

    @property
    def health(self) -> int:
        """Gets the health of this WorldSavePlayer.


        :return: The health of this WorldSavePlayer.
        :rtype: int
        """
        return self._health

    @health.setter
    def health(self, health: int):
        """Sets the health of this WorldSavePlayer.


        :param health: The health of this WorldSavePlayer.
        :type health: int
        """

        self._health = health

    @property
    def moves(self) -> int:
        """Gets the moves of this WorldSavePlayer.


        :return: The moves of this WorldSavePlayer.
        :rtype: int
        """
        return self._moves

    @moves.setter
    def moves(self, moves: int):
        """Sets the moves of this WorldSavePlayer.


        :param moves: The moves of this WorldSavePlayer.
        :type moves: int
        """

        self._moves = moves

    @property
    def taken_moves(self) -> List[Coord]:
        """Gets the taken_moves of this WorldSavePlayer.


        :return: The taken_moves of this WorldSavePlayer.
        :rtype: List[Coord]
        """
        return self._taken_moves

    @taken_moves.setter
    def taken_moves(self, taken_moves: List[Coord]):
        """Sets the taken_moves of this WorldSavePlayer.


        :param taken_moves: The taken_moves of this WorldSavePlayer.
        :type taken_moves: List[Coord]
        """

        self._taken_moves = taken_moves

# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from GridGame.models.base_model_ import Model
from GridGame import util


class WorldWeights(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, mud: float=25, lava: float=10, speeder: float=5, empty: float=60):  # noqa: E501
        """WorldWeights - a model defined in Swagger

        :param mud: The mud of this WorldWeights.  # noqa: E501
        :type mud: float
        :param lava: The lava of this WorldWeights.  # noqa: E501
        :type lava: float
        :param speeder: The speeder of this WorldWeights.  # noqa: E501
        :type speeder: float
        :param empty: The empty of this WorldWeights.  # noqa: E501
        :type empty: float
        """
        self.swagger_types = {
            'mud': float,
            'lava': float,
            'speeder': float,
            'empty': float
        }

        self.attribute_map = {
            'mud': 'mud',
            'lava': 'lava',
            'speeder': 'speeder',
            'empty': 'empty'
        }
        self._mud = mud
        self._lava = lava
        self._speeder = speeder
        self._empty = empty

    @classmethod
    def from_dict(cls, dikt) -> 'WorldWeights':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The world_weights of this WorldWeights.  # noqa: E501
        :rtype: WorldWeights
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mud(self) -> float:
        """Gets the mud of this WorldWeights.


        :return: The mud of this WorldWeights.
        :rtype: float
        """
        return self._mud

    @mud.setter
    def mud(self, mud: float):
        """Sets the mud of this WorldWeights.


        :param mud: The mud of this WorldWeights.
        :type mud: float
        """

        self._mud = mud

    @property
    def lava(self) -> float:
        """Gets the lava of this WorldWeights.


        :return: The lava of this WorldWeights.
        :rtype: float
        """
        return self._lava

    @lava.setter
    def lava(self, lava: float):
        """Sets the lava of this WorldWeights.


        :param lava: The lava of this WorldWeights.
        :type lava: float
        """

        self._lava = lava

    @property
    def speeder(self) -> float:
        """Gets the speeder of this WorldWeights.


        :return: The speeder of this WorldWeights.
        :rtype: float
        """
        return self._speeder

    @speeder.setter
    def speeder(self, speeder: float):
        """Sets the speeder of this WorldWeights.


        :param speeder: The speeder of this WorldWeights.
        :type speeder: float
        """

        self._speeder = speeder

    @property
    def empty(self) -> float:
        """Gets the empty of this WorldWeights.


        :return: The empty of this WorldWeights.
        :rtype: float
        """
        return self._empty

    @empty.setter
    def empty(self, empty: float):
        """Sets the empty of this WorldWeights.


        :param empty: The empty of this WorldWeights.
        :type empty: float
        """

        self._empty = empty

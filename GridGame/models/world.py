# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from GridGame.models.base_model_ import Model
from GridGame.models.coord import Coord  # noqa: F401,E501
from GridGame import util


class World(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, grid: List[List[float]]=None, start: Coord=None, end: Coord=None):  # noqa: E501
        """World - a model defined in Swagger

        :param id: The id of this World.  # noqa: E501
        :type id: str
        :param grid: The grid of this World.  # noqa: E501
        :type grid: List[List[float]]
        :param start: The start of this World.  # noqa: E501
        :type start: Coord
        :param end: The end of this World.  # noqa: E501
        :type end: Coord
        """
        self.swagger_types = {
            'id': str,
            'grid': List[List[float]],
            'start': Coord,
            'end': Coord
        }

        self.attribute_map = {
            'id': 'id',
            'grid': 'grid',
            'start': 'start',
            'end': 'end'
        }
        self._id = id
        self._grid = grid
        self._start = start
        self._end = end

    @classmethod
    def from_dict(cls, dikt) -> 'World':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The World of this World.  # noqa: E501
        :rtype: World
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this World.


        :return: The id of this World.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this World.


        :param id: The id of this World.
        :type id: str
        """

        self._id = id

    @property
    def grid(self) -> List[List[float]]:
        """Gets the grid of this World.


        :return: The grid of this World.
        :rtype: List[List[float]]
        """
        return self._grid

    @grid.setter
    def grid(self, grid: List[List[float]]):
        """Sets the grid of this World.


        :param grid: The grid of this World.
        :type grid: List[List[float]]
        """

        self._grid = grid

    @property
    def start(self) -> Coord:
        """Gets the start of this World.


        :return: The start of this World.
        :rtype: Coord
        """
        return self._start

    @start.setter
    def start(self, start: Coord):
        """Sets the start of this World.


        :param start: The start of this World.
        :type start: Coord
        """

        self._start = start

    @property
    def end(self) -> Coord:
        """Gets the end of this World.


        :return: The end of this World.
        :rtype: Coord
        """
        return self._end

    @end.setter
    def end(self, end: Coord):
        """Sets the end of this World.


        :param end: The end of this World.
        :type end: Coord
        """

        self._end = end
